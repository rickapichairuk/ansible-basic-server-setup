# ====================================================
# Basic server security & setup
# ====================================================

- name: Update APT package cache
  action: apt update_cache=yes

- name: install apt key for yarn
  become: true
  apt_key:
    url: https://dl.yarnpkg.com/debian/pubkey.gpg
    state: present

- name: add apt repo for yarn
  apt_repository:
    repo: deb https://dl.yarnpkg.com/debian/ stable main
    state: present

- name: "install software-properties-common on Ubuntu 18"
    apt: pkg=software-properties-common state=latest
    when: (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "18")

- name: "install python-software-properties on Ubuntu < 18"
    apt: pkg=python-software-properties state=latest
    when: (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] != "18")

- name: install essential packages
  apt: pkg={{ item }} state=latest
  become: true
  with_items:
    - build-essential
    - git-core
    - python-setuptools
    - python-software-properties
    - python-pip
    - aptitude
    - fail2ban
    - unattended-upgrades
    - vim

- name: Install the gpg key for nodejs LTS
  apt_key:
    url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
    state: present

- name: Install the nodejs LTS repos
  apt_repository:
    repo: "deb https://deb.nodesource.com/node_{{ nodejs.version }}.x {{ ansible_distribution_release }} main"
    state: present
    update_cache: yes

- name: Install the nodejs
  apt:
    name: nodejs
    state: present

- name: install other packages
  apt: pkg={{ item }} state=latest
  become: true
  with_items: "{{ additional_packages_to_install }}"
  when: additional_packages_to_install is defined

- name: Upgrade all packages
  apt: upgrade=safe

- name: Adjust APT update intervals
  copy: src=apt_periodic dest=/etc/apt/apt.conf.d/10periodic

- name: Disallow password authentication
  lineinfile: dest=/etc/ssh/sshd_config
              regexp="^PasswordAuthentication"
              line="PasswordAuthentication no"
              state=present
  notify: Restart ssh

- name: Disallow root SSH access
  lineinfile: dest=/etc/ssh/sshd_config
              regexp="^PermitRootLogin"
              line="PermitRootLogin no"
              state=present
  notify: Restart ssh
